package com.example.bmicalculator;

import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    private EditText heightEditText, weightEditText;
    private Spinner heightUnitSpinner, weightUnitSpinner;
    private TextView resultTextView, errorTextView;
    private Button calculateButton, resetButton;
    private SharedPreferences prefs;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        heightEditText = findViewById(R.id.heightEditText);
        weightEditText = findViewById(R.id.weightEditText);
        heightUnitSpinner = findViewById(R.id.heightUnitSpinner);
        weightUnitSpinner = findViewById(R.id.weightUnitSpinner);
        resultTextView = findViewById(R.id.resultTextView);
        errorTextView = findViewById(R.id.errorTextView);
        calculateButton = findViewById(R.id.calculateButton);
        resetButton = findViewById(R.id.resetButton);

        prefs = getSharedPreferences("BMI_PREFS", MODE_PRIVATE);

        // Setup spinners
        ArrayAdapter<String> heightAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, new String[]{"cm", "ft/in"});
        heightAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        heightUnitSpinner.setAdapter(heightAdapter);

        ArrayAdapter<String> weightAdapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, new String[]{"kg", "lb"});
        weightAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        weightUnitSpinner.setAdapter(weightAdapter);

        // Load last calculation
        String lastResult = prefs.getString("result", "");
        if (!lastResult.isEmpty()) {
            resultTextView.setText(lastResult);
        }

        calculateButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                calculateBMI();
            }
        });

        resetButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                reset();
            }
        });
    }

    private void calculateBMI() {
        errorTextView.setText("");
        resultTextView.setText("");

        try {
            double height = 0;
            String heightUnit = heightUnitSpinner.getSelectedItem().toString();
            if (heightUnit.equals("cm")) {
                height = Double.parseDouble(heightEditText.getText().toString());
                if (height <= 0) throw new Exception("Height must be positive.");
                height /= 100; // to meters
            } else {
                // Assuming ft/in input as "5'6\"" but for simplicity, parse as feet.inches
                String[] parts = heightEditText.getText().toString().split("\\.");
                double feet = Double.parseDouble(parts[0]);
                double inches = parts.length > 1 ? Double.parseDouble(parts[1]) : 0;
                if (feet < 0 || inches < 0 || (feet == 0 && inches == 0)) throw new Exception("Height must be positive.");
                height = (feet * 30.48 + inches * 2.54) / 100; // to meters
            }

            double weight = Double.parseDouble(weightEditText.getText().toString());
            String weightUnit = weightUnitSpinner.getSelectedItem().toString();
            if (weightUnit.equals("lb")) {
                weight *= 0.453592; // to kg
            }
            if (weight <= 0) throw new Exception("Weight must be positive.");

            double bmi = weight / (height * height);
            String category;
            if (bmi < 18.5) category = "Underweight";
            else if (bmi < 25) category = "Normal";
            else if (bmi < 30) category = "Overweight";
            else category = "Obese";

            String result = "BMI: " + String.format("%.1f", bmi) + "\nCategory: " + category;
            resultTextView.setText(result);
            prefs.edit().putString("result", result).apply();
        } catch (Exception e) {
            errorTextView.setText(e.getMessage());
        }
    }

    private void reset() {
        heightEditText.setText("");
        weightEditText.setText("");
        resultTextView.setText("");
        errorTextView.setText("");
    }
}
